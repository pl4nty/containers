name: release

on:
  push:
    branches:
      - main
    paths-ignore:
      - .github/**
  workflow_dispatch:
    inputs:
      images:
        description: Image folder names as JSON array
        required: true
        type: string

jobs:
  get-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      images: ${{ github.event_name == 'workflow_dispatch' && inputs.images || steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        dir_names: true # output folders instead of files
        dir_names_max_depth: 2 # only return roots, not subfolders
        json: true # output in matrix JSON format
    
    - run: echo ${{ steps.changed-files.outputs.all_changed_and_modified_files }}

  docker:
    needs: get-images
    strategy:
      matrix:
        image: ${{ fromJson(needs.get-images.outputs.images) }}
        arch:
        - linux/amd64
        - linux/arm64
        include:
        - os: ubuntu-latest
        - arch: linux/arm64
          os: buildjet-4vcpu-ubuntu-2204
    runs-on: ${{ matrix.os }}
    permissions:
      packages: write
      contents: read
    steps:
      # required for builds with custom context
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Generate image tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          tags: type=sha

      - name: Create build directory or update image submodule
        run: cd ${{ matrix.image }} && git submodule update --init --recursive ${{ matrix.image }} || mkdir ${{ matrix.image }} -p 

      - name: Copy patches over build directory
        run: |
          shopt -s extglob
          cd ${{ matrix.image }} && cp !(${{ matrix.image }}) ${{ matrix.image }} -r
        continue-on-error: true

      - uses: docker/setup-buildx-action@v2

      - uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image }}/${{ matrix.image }}
          platforms: ${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
