name: release

on:
  push:
    branches:
      - main
    paths-ignore:
      - .github/**
  workflow_dispatch:
    inputs:
      images:
        description: Image folder names as JSON array
        required: true
        type: string

jobs:
  get-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      images: ${{ github.event_name == 'workflow_dispatch' && inputs.images || steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        dir_names: true # output folders instead of files
        dir_names_max_depth: 2 # only return roots, not subfolders
        json: true # output in matrix JSON format
        files_ignore: .github
    
    - run: echo ${{ steps.changed-files.outputs.all_changed_and_modified_files }}

  docker:
    needs: get-images
    strategy:
      # assumes Linux can be multi-arch but Windows can't
      matrix:
        image: ${{ fromJson(needs.get-images.outputs.images) }}
        arch:
        - linux/amd64
        - linux/arm64
        os:
        - ubuntu-latest
        - buildjet-2vcpu-ubuntu-2204-arm
        include:
        - image: universal-print-connector
          arch: windows/amd64
          os: windows-latest
        exclude:
        - arch: linux/amd64
          os: buildjet-2vcpu-ubuntu-2204-arm
        - arch: linux/arm64
          os: ubuntu-latest
        - image: universal-print-connector
    runs-on: ${{ matrix.os }}
    permissions:
      packages: write
      contents: read
    steps:
      # required for builds with custom context
      - name: Checkout image folder
        uses: Bhacaz/checkout-files@v2
        with:
          files: ${{ matrix.image }}

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ github.token }}

      - name: Generate image tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          tags: type=sha

      - name: Patch submodule if present
        id: get-context
        run: |
          cd $IMAGE
          git submodule update --init --recursive $IMAGE && cp * $IMAGE -r
          echo "context=$IMAGE/$IMAGE" >> $GITHUB_OUTPUT
        continue-on-error: true
        env:
          IMAGE: ${{ matrix.image }}

      # - uses: docker/setup-buildx-action@v2

      - uses: frabert/replace-string-action@v2
        id: format-labels
        with:
          pattern: '\n'
          string: ${{ steps.meta.outputs.labels }}
          replace-with: ','
          flags: 'g'

      # docker/build-push-action#18 doesn't support Windows
      # this action doesn't have caching though
      - uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ matrix.image }} #
          registry: ghcr.io #
          username: ${{ github.actor }} #
          password: ${{ github.token }} #
          directory: ${{ steps.get-context.outputs.context || matrix.image }} # context:
          # platform: ${{ matrix.arch }} # platforms:
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          # push: true
          tags: sha-${{ github.sha }} # ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.format-labels.outputs.replaced }}
